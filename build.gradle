buildscript {
    repositories {
        maven {
            url 'https://artifactory.palantir.build/artifactory/all-jar'
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.palantir:gradle-circle-style:1.1.2'
        classpath 'com.netflix.nebula:nebula-dependency-recommender:5.2.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:0.19.0'
        classpath 'com.palantir.internalpublish:gradle-internal-publish-plugin:1.1.0'
        classpath 'com.palantir.configurationresolver:gradle-configuration-resolver-plugin:0.3.0'
        classpath 'gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.7.3'
    }
}


repositories {
    maven {
        url 'https://artifactory.palantir.build/artifactory/all-jar'
    }
}

apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.publish-jar'
apply plugin: 'com.palantir.configuration-resolver'
apply plugin: 'com.palantir.git-version'
apply plugin: 'nebula.dependency-recommender'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.palantir.circle.style'

group 'com.palantir.conjurepostman'
version gitVersion()

dependencies {
    compile localGroovy()
    compile gradleApi()

    testCompile gradleTestKit()
    testCompile 'com.netflix.nebula:nebula-test'

    baseline 'com.palantir.baseline:gradle-baseline-java-config:0.19.0@zip'
}

dependencyRecommendations {
    strategy OverrideTransitives
    propertiesFile file: project.rootProject.file('versions.props')
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
    }
}

configurations.errorprone {
    resolutionStrategy {
        force 'com.google.guava:guava:21.0'
    }
}

gradlePlugin {
    // do not add new task to publish to plugins.gradle.org
    automatedPublishing = false
}
